# source: http://meeting-magic-backend.herokuapp.com/v1alpha1/graphql
# timestamp: Sun Mar 31 2019 21:47:05 GMT-0700 (Pacific Daylight Time)

schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""conflict action"""
enum conflict_action {
  """ignore the insert on this row"""
  ignore

  """update the row with the given values"""
  update
}

"""
expression to compare columns of type integer. All fields are combined with logical 'AND'.
"""
input integer_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int]
}

"""
columns and relationships of "meeting"
"""
type meeting {
  id: Int!
  text_field: String!
}

"""
aggregated selection of "meeting"
"""
type meeting_aggregate {
  aggregate: meeting_aggregate_fields
  nodes: [meeting!]!
}

"""
aggregate fields of "meeting"
"""
type meeting_aggregate_fields {
  avg: meeting_avg_fields
  count(columns: [meeting_select_column!], distinct: Boolean): Int
  max: meeting_max_fields
  min: meeting_min_fields
  stddev: meeting_stddev_fields
  stddev_pop: meeting_stddev_pop_fields
  stddev_samp: meeting_stddev_samp_fields
  sum: meeting_sum_fields
  var_pop: meeting_var_pop_fields
  var_samp: meeting_var_samp_fields
  variance: meeting_variance_fields
}

"""
order by aggregate values of table "meeting"
"""
input meeting_aggregate_order_by {
  avg: meeting_avg_order_by
  count: order_by
  max: meeting_max_order_by
  min: meeting_min_order_by
  stddev: meeting_stddev_order_by
  stddev_pop: meeting_stddev_pop_order_by
  stddev_samp: meeting_stddev_samp_order_by
  sum: meeting_sum_order_by
  var_pop: meeting_var_pop_order_by
  var_samp: meeting_var_samp_order_by
  variance: meeting_variance_order_by
}

"""
input type for inserting array relation for remote table "meeting"
"""
input meeting_arr_rel_insert_input {
  data: [meeting_insert_input!]!
  on_conflict: meeting_on_conflict
}

"""aggregate avg on columns"""
type meeting_avg_fields {
  id: Float
}

"""
order by avg() on columns of table "meeting"
"""
input meeting_avg_order_by {
  id: order_by
}

"""
Boolean expression to filter rows from the table "meeting". All fields are combined with a logical 'AND'.
"""
input meeting_bool_exp {
  _and: [meeting_bool_exp]
  _not: meeting_bool_exp
  _or: [meeting_bool_exp]
  id: integer_comparison_exp
  text_field: text_comparison_exp
}

"""
unique or primary key constraints on table "meeting"
"""
enum meeting_constraint {
  """unique or primary key constraint"""
  meeting_pkey
}

"""
input type for incrementing integer columne in table "meeting"
"""
input meeting_inc_input {
  id: Int
}

"""
input type for inserting data into table "meeting"
"""
input meeting_insert_input {
  id: Int
  text_field: String
}

"""aggregate max on columns"""
type meeting_max_fields {
  id: Int
  text_field: String
}

"""
order by max() on columns of table "meeting"
"""
input meeting_max_order_by {
  id: order_by
  text_field: order_by
}

"""aggregate min on columns"""
type meeting_min_fields {
  id: Int
  text_field: String
}

"""
order by min() on columns of table "meeting"
"""
input meeting_min_order_by {
  id: order_by
  text_field: order_by
}

"""
response of any mutation on the table "meeting"
"""
type meeting_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [meeting!]!
}

"""
input type for inserting object relation for remote table "meeting"
"""
input meeting_obj_rel_insert_input {
  data: meeting_insert_input!
  on_conflict: meeting_on_conflict
}

"""
on conflict condition type for table "meeting"
"""
input meeting_on_conflict {
  constraint: meeting_constraint!
  update_columns: [meeting_update_column!]!
}

"""
ordering options when selecting data from "meeting"
"""
input meeting_order_by {
  id: order_by
  text_field: order_by
}

"""
select columns of table "meeting"
"""
enum meeting_select_column {
  """column name"""
  id

  """column name"""
  text_field
}

"""
input type for updating data in table "meeting"
"""
input meeting_set_input {
  id: Int
  text_field: String
}

"""aggregate stddev on columns"""
type meeting_stddev_fields {
  id: Float
}

"""
order by stddev() on columns of table "meeting"
"""
input meeting_stddev_order_by {
  id: order_by
}

"""aggregate stddev_pop on columns"""
type meeting_stddev_pop_fields {
  id: Float
}

"""
order by stddev_pop() on columns of table "meeting"
"""
input meeting_stddev_pop_order_by {
  id: order_by
}

"""aggregate stddev_samp on columns"""
type meeting_stddev_samp_fields {
  id: Float
}

"""
order by stddev_samp() on columns of table "meeting"
"""
input meeting_stddev_samp_order_by {
  id: order_by
}

"""aggregate sum on columns"""
type meeting_sum_fields {
  id: Int
}

"""
order by sum() on columns of table "meeting"
"""
input meeting_sum_order_by {
  id: order_by
}

"""
update columns of table "meeting"
"""
enum meeting_update_column {
  """column name"""
  id

  """column name"""
  text_field
}

"""aggregate var_pop on columns"""
type meeting_var_pop_fields {
  id: Float
}

"""
order by var_pop() on columns of table "meeting"
"""
input meeting_var_pop_order_by {
  id: order_by
}

"""aggregate var_samp on columns"""
type meeting_var_samp_fields {
  id: Float
}

"""
order by var_samp() on columns of table "meeting"
"""
input meeting_var_samp_order_by {
  id: order_by
}

"""aggregate variance on columns"""
type meeting_variance_fields {
  id: Float
}

"""
order by variance() on columns of table "meeting"
"""
input meeting_variance_order_by {
  id: order_by
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "meeting"
  """
  delete_meeting(
    """filter the rows which have to be deleted"""
    where: meeting_bool_exp!
  ): meeting_mutation_response

  """
  delete data from the table: "profile"
  """
  delete_profile(
    """filter the rows which have to be deleted"""
    where: profile_bool_exp!
  ): profile_mutation_response

  """
  insert data into the table: "meeting"
  """
  insert_meeting(
    """the rows to be inserted"""
    objects: [meeting_insert_input!]!

    """on conflict condition"""
    on_conflict: meeting_on_conflict
  ): meeting_mutation_response

  """
  insert data into the table: "profile"
  """
  insert_profile(
    """the rows to be inserted"""
    objects: [profile_insert_input!]!

    """on conflict condition"""
    on_conflict: profile_on_conflict
  ): profile_mutation_response

  """
  update data of the table: "meeting"
  """
  update_meeting(
    """increments the integer columns with given value of the filtered values"""
    _inc: meeting_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: meeting_set_input

    """filter the rows which have to be updated"""
    where: meeting_bool_exp!
  ): meeting_mutation_response

  """
  update data of the table: "profile"
  """
  update_profile(
    """increments the integer columns with given value of the filtered values"""
    _inc: profile_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: profile_set_input

    """filter the rows which have to be updated"""
    where: profile_bool_exp!
  ): profile_mutation_response
}

"""column ordering options"""
enum order_by {
  """in the ascending order, nulls last"""
  asc

  """in the ascending order, nulls first"""
  asc_nulls_first

  """in the ascending order, nulls last"""
  asc_nulls_last

  """in the descending order, nulls first"""
  desc

  """in the descending order, nulls first"""
  desc_nulls_first

  """in the descending order, nulls last"""
  desc_nulls_last
}

"""
columns and relationships of "profile"
"""
type profile {
  id: Int!
  name: String!
}

"""
aggregated selection of "profile"
"""
type profile_aggregate {
  aggregate: profile_aggregate_fields
  nodes: [profile!]!
}

"""
aggregate fields of "profile"
"""
type profile_aggregate_fields {
  avg: profile_avg_fields
  count(columns: [profile_select_column!], distinct: Boolean): Int
  max: profile_max_fields
  min: profile_min_fields
  stddev: profile_stddev_fields
  stddev_pop: profile_stddev_pop_fields
  stddev_samp: profile_stddev_samp_fields
  sum: profile_sum_fields
  var_pop: profile_var_pop_fields
  var_samp: profile_var_samp_fields
  variance: profile_variance_fields
}

"""
order by aggregate values of table "profile"
"""
input profile_aggregate_order_by {
  avg: profile_avg_order_by
  count: order_by
  max: profile_max_order_by
  min: profile_min_order_by
  stddev: profile_stddev_order_by
  stddev_pop: profile_stddev_pop_order_by
  stddev_samp: profile_stddev_samp_order_by
  sum: profile_sum_order_by
  var_pop: profile_var_pop_order_by
  var_samp: profile_var_samp_order_by
  variance: profile_variance_order_by
}

"""
input type for inserting array relation for remote table "profile"
"""
input profile_arr_rel_insert_input {
  data: [profile_insert_input!]!
  on_conflict: profile_on_conflict
}

"""aggregate avg on columns"""
type profile_avg_fields {
  id: Float
}

"""
order by avg() on columns of table "profile"
"""
input profile_avg_order_by {
  id: order_by
}

"""
Boolean expression to filter rows from the table "profile". All fields are combined with a logical 'AND'.
"""
input profile_bool_exp {
  _and: [profile_bool_exp]
  _not: profile_bool_exp
  _or: [profile_bool_exp]
  id: integer_comparison_exp
  name: text_comparison_exp
}

"""
unique or primary key constraints on table "profile"
"""
enum profile_constraint {
  """unique or primary key constraint"""
  profile_pkey
}

"""
input type for incrementing integer columne in table "profile"
"""
input profile_inc_input {
  id: Int
}

"""
input type for inserting data into table "profile"
"""
input profile_insert_input {
  id: Int
  name: String
}

"""aggregate max on columns"""
type profile_max_fields {
  id: Int
  name: String
}

"""
order by max() on columns of table "profile"
"""
input profile_max_order_by {
  id: order_by
  name: order_by
}

"""aggregate min on columns"""
type profile_min_fields {
  id: Int
  name: String
}

"""
order by min() on columns of table "profile"
"""
input profile_min_order_by {
  id: order_by
  name: order_by
}

"""
response of any mutation on the table "profile"
"""
type profile_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [profile!]!
}

"""
input type for inserting object relation for remote table "profile"
"""
input profile_obj_rel_insert_input {
  data: profile_insert_input!
  on_conflict: profile_on_conflict
}

"""
on conflict condition type for table "profile"
"""
input profile_on_conflict {
  constraint: profile_constraint!
  update_columns: [profile_update_column!]!
}

"""
ordering options when selecting data from "profile"
"""
input profile_order_by {
  id: order_by
  name: order_by
}

"""
select columns of table "profile"
"""
enum profile_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""
input type for updating data in table "profile"
"""
input profile_set_input {
  id: Int
  name: String
}

"""aggregate stddev on columns"""
type profile_stddev_fields {
  id: Float
}

"""
order by stddev() on columns of table "profile"
"""
input profile_stddev_order_by {
  id: order_by
}

"""aggregate stddev_pop on columns"""
type profile_stddev_pop_fields {
  id: Float
}

"""
order by stddev_pop() on columns of table "profile"
"""
input profile_stddev_pop_order_by {
  id: order_by
}

"""aggregate stddev_samp on columns"""
type profile_stddev_samp_fields {
  id: Float
}

"""
order by stddev_samp() on columns of table "profile"
"""
input profile_stddev_samp_order_by {
  id: order_by
}

"""aggregate sum on columns"""
type profile_sum_fields {
  id: Int
}

"""
order by sum() on columns of table "profile"
"""
input profile_sum_order_by {
  id: order_by
}

"""
update columns of table "profile"
"""
enum profile_update_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type profile_var_pop_fields {
  id: Float
}

"""
order by var_pop() on columns of table "profile"
"""
input profile_var_pop_order_by {
  id: order_by
}

"""aggregate var_samp on columns"""
type profile_var_samp_fields {
  id: Float
}

"""
order by var_samp() on columns of table "profile"
"""
input profile_var_samp_order_by {
  id: order_by
}

"""aggregate variance on columns"""
type profile_variance_fields {
  id: Float
}

"""
order by variance() on columns of table "profile"
"""
input profile_variance_order_by {
  id: order_by
}

"""query root"""
type query_root {
  """
  fetch data from the table: "meeting"
  """
  meeting(
    """distinct select on columns"""
    distinct_on: [meeting_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [meeting_order_by!]

    """filter the rows returned"""
    where: meeting_bool_exp
  ): [meeting!]!

  """
  fetch aggregated fields from the table: "meeting"
  """
  meeting_aggregate(
    """distinct select on columns"""
    distinct_on: [meeting_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [meeting_order_by!]

    """filter the rows returned"""
    where: meeting_bool_exp
  ): meeting_aggregate!

  """fetch data from the table: "meeting" using primary key columns"""
  meeting_by_pk(id: Int!): meeting

  """
  fetch data from the table: "profile"
  """
  profile(
    """distinct select on columns"""
    distinct_on: [profile_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [profile_order_by!]

    """filter the rows returned"""
    where: profile_bool_exp
  ): [profile!]!

  """
  fetch aggregated fields from the table: "profile"
  """
  profile_aggregate(
    """distinct select on columns"""
    distinct_on: [profile_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [profile_order_by!]

    """filter the rows returned"""
    where: profile_bool_exp
  ): profile_aggregate!

  """fetch data from the table: "profile" using primary key columns"""
  profile_by_pk(id: Int!): profile
}

"""subscription root"""
type subscription_root {
  """
  fetch data from the table: "meeting"
  """
  meeting(
    """distinct select on columns"""
    distinct_on: [meeting_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [meeting_order_by!]

    """filter the rows returned"""
    where: meeting_bool_exp
  ): [meeting!]!

  """
  fetch aggregated fields from the table: "meeting"
  """
  meeting_aggregate(
    """distinct select on columns"""
    distinct_on: [meeting_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [meeting_order_by!]

    """filter the rows returned"""
    where: meeting_bool_exp
  ): meeting_aggregate!

  """fetch data from the table: "meeting" using primary key columns"""
  meeting_by_pk(id: Int!): meeting

  """
  fetch data from the table: "profile"
  """
  profile(
    """distinct select on columns"""
    distinct_on: [profile_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [profile_order_by!]

    """filter the rows returned"""
    where: profile_bool_exp
  ): [profile!]!

  """
  fetch aggregated fields from the table: "profile"
  """
  profile_aggregate(
    """distinct select on columns"""
    distinct_on: [profile_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [profile_order_by!]

    """filter the rows returned"""
    where: profile_bool_exp
  ): profile_aggregate!

  """fetch data from the table: "profile" using primary key columns"""
  profile_by_pk(id: Int!): profile
}

"""
expression to compare columns of type text. All fields are combined with logical 'AND'.
"""
input text_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String]
  _nlike: String
  _nsimilar: String
  _similar: String
}
